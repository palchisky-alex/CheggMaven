# name: Name your workflow

# on:
#   push:
#   workflow_dispatch:
#     inputs:
#       TEST_ENDPOINT: #this is used as ENV variable to provide host to run tests for
#         description: "Endpoint for tests"
#         required: false
#         default: https://github.com/palchisky-alex
#       TEST_BROWSER: #this is used as ENV variable to browser to run tests with
#         description: "Browser for tests"
#         required: false
#         default: chrome
#       ALLURE_JOB_RUN_ID: # this will be used to generate Launch name on Allure TestOps side
#         description: "alex"
#         required: false
#       ALLURE_USERNAME:
#         description: admin
#         required: false

# env:
#   ALLURE_ENDPOINT: https://alexp.testops.cloud/
#   ALLURE_TOKEN: 5cda8094-6e52-46b2-9f58-2e730c07b20f
#   ALLURE_PROJECT_ID: 1
#   ALLURE_TESTPLAN_PATH: "./testplan.json" # needed to filter the tests
#   ALLURE_RESULTS: "allure-results" # folder with the test results
#   ALLURE_JOB_RUN_ID: 100 

# jobs:
#   all-tests:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - name: Set up JDK 1.8
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.8
#       - uses: actions/github-script@v4
#         id: allure-job-uid
#         with:
#           result-encoding: string
#           script: |
#             const result = await github.actions.getWorkflowRun({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               run_id: context.runId,
#             });
#             return `${context.repo.owner}/${context.repo.repo}/actions/workflows/${result.data.workflow_id}`
#       - name: Download allurectl
#         run: |
#           wget https://github.com/allure-framework/allurectl/releases/latest/download/allurectl_linux_386 -O ./allurectl
#           chmod +x ./allurectl
#       - name: Prepare TestPlan
#         run: ./allurectl job-run plan --output-file ${ALLURE_TESTPLAN_PATH}
#       - name: Build with Gradle
#         run: ./allurectl watch -- ./gradlew test # allows sending the test results in the real time 
#         env:
#           ALLURE_JOB_UID: ${{steps.allure-job-uid.outputs.result}}
#           TEST_ENDPOINT: ${{ github.event.inputs.TEST_ENDPOINT }}
#           TEST_BROWSER: chrome
#           PERSONAL_TOKEN: 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

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Build & Install
      run: mvn -B install -D skipTests --no-transfer-progress
    - name: Install Playwright
      run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
    - name: Run tests
      run: mvn test
  
    - name: Get Allure history
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: target/allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: 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
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history

     
