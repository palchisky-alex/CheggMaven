
name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Build & Install
      run: mvn -B install -D skipTests --no-transfer-progress
    - name: Install Playwright
      run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"
    - name: Run tests
      run: mvn test
  
    - name: Get Allure history
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.CHEGG }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history
  
  allure-testops:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Allure Testops
      uses: allure-framework/allure-testops-action@v1
      with:
        endpoint: ${{ env.ALLURE_ENDPOINT }}
        token: ${{ secrets.ALLURE_TOKEN }}
        project-id: ${{ secrets.ALLURE_PROJECT_ID }}
        results-directory: ${{ env.ALLURE_RESULTS }}
        test-plan-path: ${{ env.ALLURE_TESTPLAN_PATH }}
        job-run-id: ${{ env.ALLURE_JOB_RUN_ID }}
        github-run-url: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
        github-job-url: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}#job${{ github.job }}
    env:
      TEST_ENDPOINT: ${{ github.event.inputs.TEST_ENDPOINT }}
      TEST_BROWSER: ${{ github.event.inputs.TEST_BROWSER }}
        
      
